# Hub Server Docker Compose Configuration
version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: hub-postgres
    environment:
      POSTGRES_DB: fin_hub
      POSTGRES_USER: fin_hub
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-fin_hub_dev}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U fin_hub -d fin_hub"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    restart: unless-stopped

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: hub-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: unless-stopped

  # Consul Service Discovery
  consul:
    image: consul:1.15
    container_name: hub-consul
    ports:
      - "8500:8500"
      - "8600:8600/udp"
    volumes:
      - consul_data:/consul/data
      - ./consul/config:/consul/config
    command: consul agent -server -ui -node=hub-consul -bootstrap-expect=1 -client=0.0.0.0 -config-dir=/consul/config
    environment:
      CONSUL_BIND_INTERFACE: eth0
      CONSUL_CLIENT_INTERFACE: eth0
    healthcheck:
      test: ["CMD", "consul", "members"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 15s
    restart: unless-stopped

  # Hub Server
  hub-server:
    build:
      context: ../..  # Build from Fin-Hub root to access shared libraries
      dockerfile: ./services/hub-server/Dockerfile
    container_name: hub-server
    ports:
      - "8000:8000"
    environment:
      # Database
      HUB_DATABASE_URL: postgresql+asyncpg://fin_hub:${POSTGRES_PASSWORD:-fin_hub_dev}@postgres:5432/fin_hub

      # Redis
      HUB_REDIS_URL: redis://redis:6379/0

      # Consul
      HUB_CONSUL_HOST: consul
      HUB_CONSUL_PORT: 8500

      # Server
      HUB_HOST: 0.0.0.0
      HUB_PORT: 8000
      HUB_LOG_LEVEL: INFO
      HUB_DEBUG: false

      # MCP
      HUB_MCP_SERVER_NAME: fin-hub
      HUB_MCP_SERVER_VERSION: 1.0.0
      HUB_MCP_PROTOCOL_VERSION: 2024-11-05

      # Execution
      HUB_TOOL_EXECUTION_TIMEOUT: 300
      HUB_HEALTH_CHECK_INTERVAL: 30
      HUB_CLEANUP_INTERVAL_SECONDS: 300
      HUB_SERVICE_TTL_SECONDS: 300
      HUB_UNHEALTHY_THRESHOLD: 3

      # Circuit Breaker
      HUB_CIRCUIT_BREAKER_FAILURE_THRESHOLD: 5
      HUB_CIRCUIT_BREAKER_RECOVERY_TIMEOUT: 60

    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      consul:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8000/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    restart: unless-stopped
    volumes:
      - ./logs:/app/logs

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  consul_data:
    driver: local

networks:
  default:
    driver: bridge
    name: fin-hub-network